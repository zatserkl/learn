//
// File generated by rootcint at Fri Aug 21 04:38:38 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "classtree_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Disk_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_Disk(void *p = 0);
   static void *newArray_Disk(Long_t size, void *p);
   static void delete_Disk(void *p);
   static void deleteArray_Disk(void *p);
   static void destruct_Disk(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Disk*)
   {
      ::Disk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Disk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Disk", ::Disk::Class_Version(), "classtree.C", 35,
                  typeid(::Disk), DefineBehavior(ptr, ptr),
                  &::Disk::Dictionary, isa_proxy, 0,
                  sizeof(::Disk) );
      instance.SetNew(&new_Disk);
      instance.SetNewArray(&newArray_Disk);
      instance.SetDelete(&delete_Disk);
      instance.SetDeleteArray(&deleteArray_Disk);
      instance.SetDestructor(&destruct_Disk);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Disk*)
   {
      return GenerateInitInstanceLocal((::Disk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Disk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HCyl_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_HCyl(void *p = 0);
   static void *newArray_HCyl(Long_t size, void *p);
   static void delete_HCyl(void *p);
   static void deleteArray_HCyl(void *p);
   static void destruct_HCyl(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HCyl*)
   {
      ::HCyl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HCyl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HCyl", ::HCyl::Class_Version(), "classtree.C", 61,
                  typeid(::HCyl), DefineBehavior(ptr, ptr),
                  &::HCyl::Dictionary, isa_proxy, 0,
                  sizeof(::HCyl) );
      instance.SetNew(&new_HCyl);
      instance.SetNewArray(&newArray_HCyl);
      instance.SetDelete(&delete_HCyl);
      instance.SetDeleteArray(&deleteArray_HCyl);
      instance.SetDestructor(&destruct_HCyl);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HCyl*)
   {
      return GenerateInitInstanceLocal((::HCyl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HCyl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Disk::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Disk::Class_Name()
{
   return "Disk";
}

//______________________________________________________________________________
const char *Disk::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Disk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Disk::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Disk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Disk::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Disk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Disk::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Disk*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HCyl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HCyl::Class_Name()
{
   return "HCyl";
}

//______________________________________________________________________________
const char *HCyl::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HCyl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HCyl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HCyl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HCyl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HCyl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HCyl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HCyl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Disk::Streamer(TBuffer &R__b)
{
   // Stream an object of class Disk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> vpc;
      R__b.ReadStaticArray((float*)rtd);
      R__b.ReadStaticArray((int*)bp);
      R__b.CheckByteCount(R__s, R__c, Disk::IsA());
   } else {
      R__c = R__b.WriteVersion(Disk::IsA(), kTRUE);
      R__b << vpc;
      R__b.WriteArray(rtd, 8);
      R__b.WriteArray(bp, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Disk::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class Disk.
      TClass *R__cl = ::Disk::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "vpc", &vpc);
      R__insp.Inspect(R__cl, R__parent, "rtd[8]", rtd);
      R__insp.Inspect(R__cl, R__parent, "bp[8]", bp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Disk(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Disk : new ::Disk;
   }
   static void *newArray_Disk(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Disk[nElements] : new ::Disk[nElements];
   }
   // Wrapper around operator delete
   static void delete_Disk(void *p) {
      delete ((::Disk*)p);
   }
   static void deleteArray_Disk(void *p) {
      delete [] ((::Disk*)p);
   }
   static void destruct_Disk(void *p) {
      typedef ::Disk current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Disk

//______________________________________________________________________________
void HCyl::Streamer(TBuffer &R__b)
{
   // Stream an object of class HCyl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> vccu;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         disk[R__i].Streamer(R__b);
      R__b.ReadStaticArray((int*)d);
      R__b.CheckByteCount(R__s, R__c, HCyl::IsA());
   } else {
      R__c = R__b.WriteVersion(HCyl::IsA(), kTRUE);
      R__b << vccu;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         disk[R__i].Streamer(R__b);
      R__b.WriteArray(d, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HCyl::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class HCyl.
      TClass *R__cl = ::HCyl::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "vccu", &vccu);
      R__insp.Inspect(R__cl, R__parent, "disk[2]", disk);
      R__insp.Inspect(R__cl, R__parent, "d[2]", d);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HCyl(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HCyl : new ::HCyl;
   }
   static void *newArray_HCyl(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HCyl[nElements] : new ::HCyl[nElements];
   }
   // Wrapper around operator delete
   static void delete_HCyl(void *p) {
      delete ((::HCyl*)p);
   }
   static void deleteArray_HCyl(void *p) {
      delete [] ((::HCyl*)p);
   }
   static void destruct_HCyl(void *p) {
      typedef ::HCyl current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HCyl

/********************************************************
* classtree_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableclasstree_dict();

extern "C" void G__set_cpp_environmentclasstree_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("classtree.C");
  G__cpp_reset_tagtableclasstree_dict();
}
#include <new>
extern "C" int G__cpp_dllrevclasstree_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Disk */
static int G__classtree_dict_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Disk* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Disk[n];
     } else {
       p = new((void*) gvp) Disk[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Disk;
     } else {
       p = new((void*) gvp) Disk;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__classtree_dictLN_Disk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Disk*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Disk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Disk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Disk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Disk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Disk*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Disk*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Disk*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Disk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Disk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Disk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Disk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_565_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Disk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__classtree_dict_565_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Disk* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Disk(*(Disk*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__classtree_dictLN_Disk));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Disk G__TDisk;
static int G__classtree_dict_565_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Disk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Disk*) (soff+(sizeof(Disk)*i)))->~G__TDisk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Disk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Disk*) (soff))->~G__TDisk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__classtree_dict_565_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Disk* dest = (Disk*) G__getstructoffset();
   *dest = *(Disk*) libp->para[0].ref;
   const Disk& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HCyl */
static int G__classtree_dict_566_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCyl* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HCyl[n];
     } else {
       p = new((void*) gvp) HCyl[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HCyl;
     } else {
       p = new((void*) gvp) HCyl;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__classtree_dictLN_HCyl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCyl*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HCyl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCyl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HCyl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HCyl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HCyl*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCyl*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCyl*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCyl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCyl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCyl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCyl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__classtree_dict_566_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCyl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__classtree_dict_566_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HCyl* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HCyl(*(HCyl*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__classtree_dictLN_HCyl));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HCyl G__THCyl;
static int G__classtree_dict_566_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HCyl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HCyl*) (soff+(sizeof(HCyl)*i)))->~G__THCyl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HCyl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HCyl*) (soff))->~G__THCyl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__classtree_dict_566_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCyl* dest = (HCyl*) G__getstructoffset();
   *dest = *(HCyl*) libp->para[0].ref;
   const HCyl& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Disk */

/* HCyl */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncclasstree_dict {
 public:
  G__Sizep2memfuncclasstree_dict(): p(&G__Sizep2memfuncclasstree_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncclasstree_dict::*p)();
};

size_t G__get_sizep2memfuncclasstree_dict()
{
  G__Sizep2memfuncclasstree_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceclasstree_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableclasstree_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__classtree_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__classtree_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__classtree_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__classtree_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Disk */
static void G__setup_memvarDisk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__classtree_dictLN_Disk));
   { Disk *p; p=(Disk*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vpc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vpc=",0,"Vpc for this disk");
   G__memvar_setup((void*)((long)(&p->rtd)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"rtd[8]=",0,"rtd");
   G__memvar_setup((void*)((long)(&p->bp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"bp[8]=",0,"blade/panel for rtd");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__classtree_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HCyl */
static void G__setup_memvarHCyl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__classtree_dictLN_HCyl));
   { HCyl *p; p=(HCyl*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vccu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vccu=",0,"Vccu for the whole detector");
   G__memvar_setup((void*)((long)(&p->disk)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__classtree_dictLN_Disk),-1,-1,1,"disk[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->d)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"d[2]=",0,"disk #");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__classtree_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarclasstree_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncDisk(void) {
   /* Disk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__classtree_dictLN_Disk));
   G__memfunc_setup("Disk",395,G__classtree_dict_565_0_1, 105, G__get_linked_tagnum(&G__classtree_dictLN_Disk), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__classtree_dict_565_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__classtree_dict_565_0_3, 85, G__get_linked_tagnum(&G__classtree_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&Disk::Class), 0);
   G__memfunc_setup("Class_Name",982,G__classtree_dict_565_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Disk::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__classtree_dict_565_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&Disk::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__classtree_dict_565_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&Disk::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__classtree_dict_565_0_7, 85, G__get_linked_tagnum(&G__classtree_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__classtree_dict_565_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__classtree_dict_565_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__classtree_dict_565_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__classtree_dict_565_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Disk::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__classtree_dict_565_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Disk::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__classtree_dict_565_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&Disk::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__classtree_dict_565_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&Disk::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("Disk", 395, G__classtree_dict_565_0_15, (int) ('i'), G__get_linked_tagnum(&G__classtree_dictLN_Disk), -1, 0, 1, 1, 1, 0, "u 'Disk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Disk", 521, G__classtree_dict_565_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__classtree_dict_565_0_17, (int) ('u'), G__get_linked_tagnum(&G__classtree_dictLN_Disk), -1, 1, 1, 1, 1, 0, "u 'Disk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHCyl(void) {
   /* HCyl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__classtree_dictLN_HCyl));
   G__memfunc_setup("HCyl",368,G__classtree_dict_566_0_1, 105, G__get_linked_tagnum(&G__classtree_dictLN_HCyl), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__classtree_dict_566_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__classtree_dict_566_0_3, 85, G__get_linked_tagnum(&G__classtree_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&HCyl::Class), 0);
   G__memfunc_setup("Class_Name",982,G__classtree_dict_566_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&HCyl::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__classtree_dict_566_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&HCyl::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__classtree_dict_566_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&HCyl::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__classtree_dict_566_0_7, 85, G__get_linked_tagnum(&G__classtree_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__classtree_dict_566_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__classtree_dict_566_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__classtree_dict_566_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__classtree_dict_566_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&HCyl::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__classtree_dict_566_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&HCyl::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__classtree_dict_566_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&HCyl::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__classtree_dict_566_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&HCyl::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("HCyl", 368, G__classtree_dict_566_0_15, (int) ('i'), G__get_linked_tagnum(&G__classtree_dictLN_HCyl), -1, 0, 1, 1, 1, 0, "u 'HCyl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HCyl", 494, G__classtree_dict_566_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__classtree_dict_566_0_17, (int) ('u'), G__get_linked_tagnum(&G__classtree_dictLN_HCyl), -1, 1, 1, 1, 1, 0, "u 'HCyl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncclasstree_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalclasstree_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcclasstree_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__classtree_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_Disk = { "Disk" , 99 , -1 };
G__linked_taginfo G__classtree_dictLN_HCyl = { "HCyl" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableclasstree_dict() {
  G__classtree_dictLN_TClass.tagnum = -1 ;
  G__classtree_dictLN_TBuffer.tagnum = -1 ;
  G__classtree_dictLN_TMemberInspector.tagnum = -1 ;
  G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__classtree_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__classtree_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__classtree_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__classtree_dictLN_Disk.tagnum = -1 ;
  G__classtree_dictLN_HCyl.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableclasstree_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__classtree_dictLN_TVectorTlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum(&G__classtree_dictLN_Disk),sizeof(Disk),-1,256,(char*)NULL,G__setup_memvarDisk,G__setup_memfuncDisk);
   G__tagtable_setup(G__get_linked_tagnum(&G__classtree_dictLN_HCyl),sizeof(HCyl),-1,256,(char*)NULL,G__setup_memvarHCyl,G__setup_memfuncHCyl);
}
extern "C" void G__cpp_setupclasstree_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupclasstree_dict()");
  G__set_cpp_environmentclasstree_dict();
  G__cpp_setup_tagtableclasstree_dict();

  G__cpp_setup_inheritanceclasstree_dict();

  G__cpp_setup_typetableclasstree_dict();

  G__cpp_setup_memvarclasstree_dict();

  G__cpp_setup_memfuncclasstree_dict();
  G__cpp_setup_globalclasstree_dict();
  G__cpp_setup_funcclasstree_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncclasstree_dict();
  return;
}
class G__cpp_setup_initclasstree_dict {
  public:
    G__cpp_setup_initclasstree_dict() { G__add_setup_func("classtree_dict",(G__incsetup)(&G__cpp_setupclasstree_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initclasstree_dict() { G__remove_setup_func("classtree_dict"); }
};
G__cpp_setup_initclasstree_dict G__cpp_setup_initializerclasstree_dict;

